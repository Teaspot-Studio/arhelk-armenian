
==================== FINAL INTERFACE ====================
2015-11-03 17:14:36.180925 UTC

interface arhel_5l4tN5K8mLn1X8xpt1McF3:Arhelk.Armenian.Lemma.Data.Adjective 7102
  interface hash: 6e21d60e707c2853737fa6dc5bf227d0
  ABI hash: e89065be2db851c3bb97ad3ab6cc99e6
  export-list hash: 1c2e95583f4af88aee1081c6136eb4bc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e499c01fe1b40bc06ae73506eadfd2d9
  sig of: Nothing
  used TH splices: True
  where
exports:
  Arhelk.Armenian.Lemma.Data.Adjective.adjCase
  Arhelk.Armenian.Lemma.Data.Adjective.adjCategory
  Arhelk.Armenian.Lemma.Data.Adjective.adjQuantity
  Arhelk.Armenian.Lemma.Data.Adjective.adjShort
  Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory{Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective}
  Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree{Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree}
  Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties{Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties Arhelk.Armenian.Lemma.Data.Adjective._adjCase Arhelk.Armenian.Lemma.Data.Adjective._adjCategory Arhelk.Armenian.Lemma.Data.Adjective._adjQuantity Arhelk.Armenian.Lemma.Data.Adjective._adjShort}
module dependencies: Arhelk.Armenian.Lemma.Data.Common
                     Arhelk.Armenian.Lemma.Data.Substantive
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0 base-compat-0.8.2@basec_D4gHocz8sOX8PHzFB3nfQT
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      generic-deriving-1.8.0@gener_1Q2nStr4JSvHfQMGPOhz3e
                      ghc-prim-0.4.0.0 hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy
                      integer-gmp-1.0.0.0
                      lens-family-th-0.4.1.0@lensf_1BXbC5Dg0C5GlgOx3ZVBtX
                      lens-family-core-1.2.0@lensf_41RJsMbLUP4I9prGLUphsy
                      lens-family-1.2.0@lensf_BcsUcH7SCv1L4ogXuYAwHp
                      lens-simple-0.1.0.8@lenss_3ClGSemuCIs1em35IPgh6B
                      mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR
                      semigroups-0.16.2.2@semig_509rjK42Yeb8JAwFst5KmO
                      template-haskell-2.10.0.0 text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      text-show-2@texts_6msSD0wSAlK5unkkd9ynxr
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Applicative
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Concurrent
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Exception
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Monad.ST
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Array
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Bool
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.ByteString
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Char
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Complex
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Data
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Dynamic
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Either
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Fixed
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Floating
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Functor.Identity
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Integral
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.List
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Maybe
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Monoid
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Ord
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Proxy
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Ratio
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Text
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Tuple
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Type.Coercion
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Type.Equality
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Typeable
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Version
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Void
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Foreign.C.Types
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Foreign.Ptr
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Event
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Fingerprint
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Generics
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.RTS.Flags
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.StaticPtr
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Stats
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.TypeLits
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Numeric.Natural
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.System.Exit
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.System.IO
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.System.Posix.Types
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Text.Read
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics base-4.8.1.0:GHC.TypeLits
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR:Text.PrettyPrint.HughesPJ
                         semigroups-0.16.2.2@semig_509rjK42Yeb8JAwFst5KmO:Data.List.NonEmpty
                         semigroups-0.16.2.2@semig_509rjK42Yeb8JAwFst5KmO:Data.Semigroup
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Classes
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashSet
import  -/  Arhelk.Armenian.Lemma.Data.Common 0fe48a704519c299a44db62ee358c743
  exports: 5e7ee2cc6a5ba5ff77e8c3225bcb9b1a
  GrammarQuantity 09cc9e9c842348ab498f3eeee3ff6d2c
import  -/  Arhelk.Armenian.Lemma.Data.Substantive 466e4294624c3dc76010b6ceb0328cf1
  exports: e6f0b0c59fcdc9a59b289a89eff1ce5e
  GrammarCase 0336ee1a4810fb1e33e1e3de3f46ee66
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:Data.Monoid bd73caba6e77f9944cb89ef5bec300c6
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Enum d0db4d619cd8916cc7a23444816222af
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  lens-family-th-0.4.1.0@lensf_1BXbC5Dg0C5GlgOx3ZVBtX:Lens.Family2.TH 7cc9ba1c82f1aa0ef8b5e3d05747f5ba
import  -/  lens-simple-0.1.0.8@lenss_3ClGSemuCIs1em35IPgh6B:Lens.Simple 0415aae47fc565920c4518de36a394c8
import  -/  text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow f98816fc41e1809d42ba206af16c7297
import  -/  text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Classes 2c021982bdb0927c661f3d4c9188a464
import  -/  text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Utils c7b192e03bc8b48d2b27d4f2a73e0aa2
d6a708e937b1769a0430532099975cab
  $fBoundedAdjectiveCategory ::
    GHC.Enum.Bounded
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                  Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective -}
6a18c31c727d69a55b6291703742b758
  $fBoundedAdjectiveDegree ::
    GHC.Enum.Bounded
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory ::
    GHC.Enum.Enum
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$csucc
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$cpred
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$ctoEnum
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$cfromEnum
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$cenumFrom
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$cenumFromThen
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$cenumFromTo
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$cenumFromThenTo -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory1 ::
    GHC.Prim.Int#
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 1, Strictness: <L,U>b -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory2 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_go3
                   2) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory3 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_go4
                   1) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory4 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_go5
                   0) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory5 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Strictness: b -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory6 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Strictness: b -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$cenumFrom ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory4
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory3
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory2 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$cenumFromThen ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                    Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                    Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 2 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective -> $j1 2 }
                 } in
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective -> $j 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective -> $j 1
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> $j 2 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$cenumFromThenTo ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   x2 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                     x4
                                     x5
                                     0 }
                           Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                     x4
                                     x5
                                     1 }
                           Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                     x4
                                     x5
                                     2
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                                     x4
                                     x5
                                     2 } }
                     } in
                     case x2 of wild {
                       Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective -> $j1 2 }
                 } in
                 case x1 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective -> $j 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective -> $j 1
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> $j 2 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$cenumFromTo ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_go2
                                 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory }
                       Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_go1
                                 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory }
                       Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_go
                                 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory } }
                 } in
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective -> $j 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective -> $j 1
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> $j 2 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$cfromEnum ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> GHC.Types.I# 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> GHC.Types.I# 1
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> GHC.Types.I# 2 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$cpred ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory5
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$csucc ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory6 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_$ctoEnum ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$ctoEnum ww1 }) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_c ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory_$ctoEnum
                      x)
                   ys) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_c1 ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   (case x of wild { GHC.Types.I# a10 ->
                    GHC.Prim.tagToEnum#
                      @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                      a10 })
                   ys) -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_go ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, Strictness: <L,U> -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_go1 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, Strictness: <L,U> -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_go2 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, Strictness: <L,U> -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_go3 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_go4 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
d6a708e937b1769a0430532099975cab
  $fEnumAdjectiveCategory_go5 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree ::
    GHC.Enum.Enum Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$csucc
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$cpred
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$ctoEnum
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$cfromEnum
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$cenumFrom
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$cenumFromThen
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$cenumFromTo
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$cenumFromThenTo -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree1 ::
    GHC.Prim.Int#
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 1, Strictness: <L,U>b -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree2 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_go3
                   2) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree3 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_go4
                   1) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree4 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_go5
                   0) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree5 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Strictness: b -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree6 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Strictness: b -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$cenumFrom ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree4
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree3
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree2 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$cenumFromThen ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                    Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                    Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 2 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree -> $j1 2 }
                 } in
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> $j 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree -> $j 1
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> $j 2 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$cenumFromThenTo ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   x2 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                     x4
                                     x5
                                     0 }
                           Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                     x4
                                     x5
                                     1 }
                           Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                     x4
                                     x5
                                     2
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                                     Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree)
                                     x4
                                     x5
                                     2 } }
                     } in
                     case x2 of wild {
                       Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree -> $j1 2 }
                 } in
                 case x1 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> $j 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree -> $j 1
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> $j 2 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$cenumFromTo ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_go2
                                 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree }
                       Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_go1
                                 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree }
                       Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_go x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree } }
                 } in
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> $j 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree -> $j 1
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> $j 2 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$cfromEnum ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> GHC.Types.I# 0
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> GHC.Types.I# 1
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> GHC.Types.I# 2 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$cpred ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree5
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$csucc ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree6 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_$ctoEnum ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$ctoEnum1 ww1 }) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_c ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   (Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree_$ctoEnum
                      x)
                   ys) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_c1 ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   (case x of wild { GHC.Types.I# a10 ->
                    GHC.Prim.tagToEnum#
                      @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                      a10 })
                   ys) -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_go ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, Strictness: <L,U> -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_go1 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, Strictness: <L,U> -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_go2 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, Strictness: <L,U> -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_go3 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_go4 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
6a18c31c727d69a55b6291703742b758
  $fEnumAdjectiveDegree_go5 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
d6a708e937b1769a0430532099975cab
  $fEqAdjectiveCategory ::
    GHC.Classes.Eq
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveCategory_$c==
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveCategory_$c/= -}
d6a708e937b1769a0430532099975cab
  $fEqAdjectiveCategory_$c/= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.False } }) -}
d6a708e937b1769a0430532099975cab
  $fEqAdjectiveCategory_$c== ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   ds1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.True } }) -}
6a18c31c727d69a55b6291703742b758
  $fEqAdjectiveDegree ::
    GHC.Classes.Eq Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveDegree_$c==
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveDegree_$c/= -}
6a18c31c727d69a55b6291703742b758
  $fEqAdjectiveDegree_$c/= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.False } }) -}
6a18c31c727d69a55b6291703742b758
  $fEqAdjectiveDegree_$c== ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   ds1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.True } }) -}
292629ee60927ae297c71e24a5c35e95
  $fEqAdjectiveProperties ::
    GHC.Classes.Eq
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveProperties_$c==
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveProperties_$c/= -}
292629ee60927ae297c71e24a5c35e95
  $fEqAdjectiveProperties_$c/= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveProperties_$c==
                        a10
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
292629ee60927ae297c71e24a5c35e95
  $fEqAdjectiveProperties_$c== ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   w1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case w of ww { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ww6 ww7 ww8 ww9 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
292629ee60927ae297c71e24a5c35e95
  $fMonoidAdjectiveProperties ::
    GHC.Base.Monoid
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                  Arhelk.Armenian.Lemma.Data.Adjective.$fMonoidAdjectiveProperties_$cmempty
                  Arhelk.Armenian.Lemma.Data.Adjective.$fMonoidAdjectiveProperties_$cmappend
                  Arhelk.Armenian.Lemma.Data.Adjective.$fMonoidAdjectiveProperties_$cmconcat -}
292629ee60927ae297c71e24a5c35e95
  $fMonoidAdjectiveProperties_$cmappend ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U)><L,U(1*U,1*U,1*U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   w1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   (case w of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    case ds of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds4 ds5 ds6 ds7 ->
                         ds4 }
                      GHC.Base.Just ipv -> wild1 } })
                   (case w of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    case ds1 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds4 ds5 ds6 ds7 ->
                         ds5 }
                      GHC.Base.Just ipv -> wild1 } })
                   (case w of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    case ds2 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds4 ds5 ds6 ds7 ->
                         ds6 }
                      GHC.Base.Just ipv -> wild1 } })
                   (case w of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    case ds3 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds4 ds5 ds6 ds7 ->
                         ds7 }
                      GHC.Base.Just ipv -> wild1 } })) -}
292629ee60927ae297c71e24a5c35e95
  $fMonoidAdjectiveProperties_$cmconcat ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties] ->
                 case Arhelk.Armenian.Lemma.Data.Adjective.$wgo
                        w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
292629ee60927ae297c71e24a5c35e95
  $fMonoidAdjectiveProperties_$cmempty ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity)
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory ::
    GHC.Classes.Ord
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$ccompare
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$c<
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$c<=
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$c>
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$c>=
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$cmax
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory_$cmin -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$c< ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$c<= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.True } }) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$c> ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.False } }) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$c>= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$ccompare ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> GHC.Types.EQ } }) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$cmax ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective -> y
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case y of wild1 {
                        DEFAULT
                        -> Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective } }) -}
d6a708e937b1769a0430532099975cab
  $fOrdAdjectiveCategory_$cmin ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> case y of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        -> Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        -> Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                        Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                        -> Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective }
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective -> y }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree ::
    GHC.Classes.Ord
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$ccompare
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$c<
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$c<=
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$c>
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$c>=
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$cmax
                  Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree_$cmin -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$c< ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$c<= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.True } }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$c> ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.False } }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$c>= ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$ccompare ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   b :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case a10 of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> GHC.Types.EQ } }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$cmax ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree -> y
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case y of wild1 {
                        DEFAULT -> Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree } }) -}
6a18c31c727d69a55b6291703742b758
  $fOrdAdjectiveDegree_$cmin ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   y :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree }
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> case y of wild1 {
                        Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        -> Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                        Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        -> Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                        Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                        -> Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree }
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree -> y }) -}
d6a708e937b1769a0430532099975cab
  $fShowAdjectiveCategory ::
    GHC.Show.Show
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory_$cshow
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory_$cshowList -}
1cc199e1bdf7b7a1bc2d7278ac95a29e
  $fShowAdjectiveCategory1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "PossessiveAdjective"#) -}
8b5c29e897ce4c88ab1794cfbaa0b0be
  $fShowAdjectiveCategory2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ComparativeAdjective"#) -}
16805308aceb15f84d4e03dfee1a57fe
  $fShowAdjectiveCategory3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "QualitiveAdjective"#) -}
d6a708e937b1769a0430532099975cab
  $fShowAdjectiveCategory_$cshow ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory3
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory2
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory1 }) -}
d6a708e937b1769a0430532099975cab
  $fShowAdjectiveCategory_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowsPrec) -}
d6a708e937b1769a0430532099975cab
  $fShowAdjectiveCategory_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   w2 :: GHC.Base.String ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowsPrec w1 w2) -}
6a18c31c727d69a55b6291703742b758
  $fShowAdjectiveDegree ::
    GHC.Show.Show Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree_$cshow
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree_$cshowList -}
2f9033ba981677ea553fa71244e686be
  $fShowAdjectiveDegree1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SuperlativeDegree"#) -}
40d949c405ed9ff90236530deb3ab19a
  $fShowAdjectiveDegree2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ComparitiveDegree"#) -}
dec8d4b476ca35ad2c5ab48769815724
  $fShowAdjectiveDegree3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PositiveDegree"#) -}
6a18c31c727d69a55b6291703742b758
  $fShowAdjectiveDegree_$cshow ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree3
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree2
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree1 }) -}
6a18c31c727d69a55b6291703742b758
  $fShowAdjectiveDegree_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowsPrec1) -}
6a18c31c727d69a55b6291703742b758
  $fShowAdjectiveDegree_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   w2 :: GHC.Base.String ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowsPrec1 w1 w2) -}
292629ee60927ae297c71e24a5c35e95
  $fShowAdjectiveProperties ::
    GHC.Show.Show
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties_$cshow
                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties_$cshowList -}
292629ee60927ae297c71e24a5c35e95
  $fShowAdjectiveProperties1 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case w of ww { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowsPrec2
                   0
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
7e409ceea52946e391bc9d50a6cae547
  $fShowAdjectiveProperties2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
34902bda789aa9e81ac060c0368de875
  $fShowAdjectiveProperties3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_adjCategory = "#) -}
d3577ec9080499d8d60eb9f4a7703908
  $fShowAdjectiveProperties4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_adjShort = "#) -}
0a67e593b181d147f49a4b85d40a6014
  $fShowAdjectiveProperties5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_adjQuantity = "#) -}
69db60d64e59b02e291d2e3f03111888
  $fShowAdjectiveProperties6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
2c124d7ecc2bb61549f0055bc483e7a2
  $fShowAdjectiveProperties7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_adjCase = "#) -}
f3bd85e631130ea49187437442412826
  $fShowAdjectiveProperties8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "AdjectiveProperties {"#) -}
f35c22fc8bdc04cd0ed2157891e1152b
  $fShowAdjectiveProperties9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
292629ee60927ae297c71e24a5c35e95
  $fShowAdjectiveProperties_$cshow ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
292629ee60927ae297c71e24a5c35e95
  $fShowAdjectiveProperties_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties1) -}
292629ee60927ae297c71e24a5c35e95
  $fShowAdjectiveProperties_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ww3 ww4 ww5 ww6 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
d6a708e937b1769a0430532099975cab
  $fTextShowAdjectiveCategory ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory_$s$dmshowbPrec
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory_$cshowb
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory_$cshowbList -}
d6a708e937b1769a0430532099975cab
  $fTextShowAdjectiveCategory1 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4, Strictness: <S,1*U> -}
d6a708e937b1769a0430532099975cab
  $fTextShowAdjectiveCategory2 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   @ s
                   w1 :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w2 :: Data.Text.Internal.Builder.Buffer s
                   w3 :: GHC.Prim.State# s[OneShot] ->
                 case w2 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$wa
                   w
                   @ s
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3 }) -}
d6a708e937b1769a0430532099975cab
  $fTextShowAdjectiveCategory_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory2
                  `cast`
                (<Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
d6a708e937b1769a0430532099975cab
  $fTextShowAdjectiveCategory_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <S,1*U>,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory1
                   `cast`
                 (<[Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]>_R
                  ->_R Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))) -}
d6a708e937b1769a0430532099975cab
  $fTextShowAdjectiveCategory_$s$dmshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   @ s
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                           -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta2 :: Data.Text.Internal.Builder.Buffer s
                   eta3 :: GHC.Prim.State# s[OneShot] ->
                 ((Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory_$cshowb
                     eta)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    eta1
                    eta2)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta3)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
6a18c31c727d69a55b6291703742b758
  $fTextShowAdjectiveDegree ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree_$s$dmshowbPrec
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree_$cshowb
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree_$cshowbList -}
6a18c31c727d69a55b6291703742b758
  $fTextShowAdjectiveDegree1 ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4, Strictness: <S,1*U> -}
6a18c31c727d69a55b6291703742b758
  $fTextShowAdjectiveDegree2 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   @ s
                   w1 :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w2 :: Data.Text.Internal.Builder.Buffer s
                   w3 :: GHC.Prim.State# s[OneShot] ->
                 case w2 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$wa1
                   w
                   @ s
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3 }) -}
6a18c31c727d69a55b6291703742b758
  $fTextShowAdjectiveDegree_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree2
                  `cast`
                (<Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
6a18c31c727d69a55b6291703742b758
  $fTextShowAdjectiveDegree_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <S,1*U>,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree1
                   `cast`
                 (<[Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]>_R
                  ->_R Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))) -}
6a18c31c727d69a55b6291703742b758
  $fTextShowAdjectiveDegree_$s$dmshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   @ s
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                           -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta2 :: Data.Text.Internal.Builder.Buffer s
                   eta3 :: GHC.Prim.State# s[OneShot] ->
                 ((Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree_$cshowb
                     eta)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    eta1
                    eta2)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta3)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
292629ee60927ae297c71e24a5c35e95
  $fTextShowAdjectiveProperties ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties_$cshowbPrec
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties_$cshowb
                  Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties_$cshowbList -}
9028285fa93c744a87624cfe6ee91665
  $fTextShowAdjectiveProperties1 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$wa2
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
ebefb3ec0a57120678723f9f14038c48
  $fTextShowAdjectiveProperties2 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$wa3
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
b110f86ffd54cfd5bc13abc034e71590
  $fTextShowAdjectiveProperties3 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$wa4
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
becb0084fea51921b5631573853f157e
  $fTextShowAdjectiveProperties4 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$wa5
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
cf8a747c07f7c7ee31913f5dd08eefdb
  $fTextShowAdjectiveProperties5 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3,
     Unfolding: (\ @ s
                   k :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ds1 :: Data.Text.Internal.Builder.Buffer s
                   eta :: GHC.Prim.State# s[OneShot] ->
                 case ds1 of wild1 { Data.Text.Internal.Builder.Buffer dt dt1 dt2 dt3 ->
                 letrec {
                   $wa14 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww :: GHC.Prim.MutableByteArray# s
                       ww1 :: GHC.Prim.Int#
                       ww2 :: GHC.Prim.Int#
                       ww3 :: GHC.Prim.Int#
                       w :: [GHC.Types.Char]
                       w1 :: GHC.Prim.State# s[OneShot] ->
                     case w of wild2 {
                       []
                       -> (k (Data.Text.Internal.Builder.Buffer @ s ww ww1 ww2 ww3))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w1
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww3 1) of wild3 {
                            GHC.Types.False
                            -> case ipv4 of wild4 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild5 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w1 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa14
                                      ww
                                      ww1
                                      (GHC.Prim.+# ww2 2)
                                      (GHC.Prim.-# ww3 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww
                                           (GHC.Prim.+# ww1 ww2)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w1 of s2# { DEFAULT ->
                                    $wa14
                                      ww
                                      ww1
                                      (GHC.Prim.+# ww2 1)
                                      (GHC.Prim.-# ww3 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w1 of ds4 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww1
                                       ww2)
                                    (case $wa14
                                            ipv9
                                            0
                                            0
                                            112
                                            wild2
                                            ipv8 of ds5 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa14
                   dt
                   dt1
                   dt2
                   dt3
                   Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties_str
                   eta }) -}
292629ee60927ae297c71e24a5c35e95
  $fTextShowAdjectiveProperties_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case w of ww { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowb
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
292629ee60927ae297c71e24a5c35e95
  $fTextShowAdjectiveProperties_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ eta :: [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties] ->
                 case eta of wild {
                   []
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties5
                        `cast`
                      (Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                   : x xs
                   -> let {
                        ds :: Data.Text.Internal.Builder.Builder
                        = case x of ww { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ww1 ww2 ww3 ww4 ->
                          Arhelk.Armenian.Lemma.Data.Adjective.$w$cshowb ww1 ww2 ww3 ww4 }
                      } in
                      let {
                        ds1 :: Data.Text.Internal.Builder.Builder
                        = Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties_go
                            xs
                      } in
                      (\ @ s
                         eta1 :: Data.Text.Internal.Builder.Buffer s
                                 -> GHC.ST.ST s [Data.Text.Internal.Text] ->
                       let {
                         eta2 :: Data.Text.Internal.Builder.Buffer s
                                 -> GHC.ST.ST s [Data.Text.Internal.Text]
                         = ds `cast` (Data.Text.Internal.Builder.NTCo:Builder[0])
                             @ s
                             (ds1 `cast` (Data.Text.Internal.Builder.NTCo:Builder[0]) @ s eta1)
                       } in
                       \ eta3 :: Data.Text.Internal.Builder.Buffer s
                         eta4 :: GHC.Prim.State# s[OneShot] ->
                       case eta3 of wild1 { Data.Text.Internal.Builder.Buffer dt dt1 dt2 dt3 ->
                       case GHC.Prim.tagToEnum#
                              @ GHC.Types.Bool
                              (GHC.Prim.<=# 2 dt3) of wild2 {
                         GHC.Types.False
                         -> case dt2 of wild3 {
                              DEFAULT
                              -> (# eta4,
                                    GHC.Types.:
                                      @ Data.Text.Internal.Text
                                      (Data.Text.Internal.Text
                                         dt
                                           `cast`
                                         (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                s) GHC.Prim.ByteArray#)
                                         dt1
                                         wild3)
                                      (case GHC.Prim.newByteArray#
                                              @ s
                                              224
                                              eta4 of ds2 { (#,#) ipv1 ipv2 ->
                                       case GHC.Prim.writeWord16Array#
                                              @ s
                                              ipv2
                                              0
                                              __word 91
                                              ipv1 of s2# { DEFAULT ->
                                       case (eta2
                                               (Data.Text.Internal.Builder.Buffer @ s ipv2 0 1 111))
                                              `cast`
                                            (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                                              s2# of ds3 { (#,#) ipv4 ipv5 ->
                                       ipv5 } } }) #)
                              0
                              -> case GHC.Prim.newByteArray#
                                        @ s
                                        224
                                        eta4 of ds2 { (#,#) ipv1 ipv2 ->
                                 case GHC.Prim.writeWord16Array#
                                        @ s
                                        ipv2
                                        0
                                        __word 91
                                        ipv1 of s2# { DEFAULT ->
                                 (eta2 (Data.Text.Internal.Builder.Buffer @ s ipv2 0 1 111))
                                   `cast`
                                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                                   s2# } } }
                         GHC.Types.True
                         -> case GHC.Prim.writeWord16Array#
                                   @ s
                                   dt
                                   (GHC.Prim.+# dt1 dt2)
                                   __word 91
                                   eta4 of s2# { DEFAULT ->
                            (eta2
                               (Data.Text.Internal.Builder.Buffer
                                  @ s
                                  dt
                                  dt1
                                  (GHC.Prim.+# dt2 1)
                                  (GHC.Prim.-# dt3 1)))
                              `cast`
                            (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                              s2# } } })
                        `cast`
                      (Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) }) -}
292629ee60927ae297c71e24a5c35e95
  $fTextShowAdjectiveProperties_$cshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties_$cshowb
                   eta) -}
292629ee60927ae297c71e24a5c35e95
  $fTextShowAdjectiveProperties_go ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 1, Strictness: <S,1*U> -}
db0e540ba275847c06c6317dbcbab34f
  $fTextShowAdjectiveProperties_str :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "[]"#) -}
32de3e37244f025d580baa68e83d57ee
  $w$c== ::
    GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe GHC.Types.Bool
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe GHC.Types.Bool
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
dd705711bfd17dd5e973e9a76d9d5550
  $w$cshowb ::
    GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe GHC.Types.Bool
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   ww1 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                   ww2 :: GHC.Base.Maybe GHC.Types.Bool
                   ww3 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 TextShow.Utils.unwordsB
                   (GHC.Types.:
                      @ Data.Text.Internal.Builder.Builder
                      (case ww of wild {
                         GHC.Base.Nothing
                         -> Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties4
                              `cast`
                            (Trans
                                 (forall s.
                                  <Data.Text.Internal.Builder.Buffer s
                                   -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                  ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                  ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                                 (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                         GHC.Base.Just x
                         -> (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase2
                               x)
                              `cast`
                            (Trans
                                 (forall s.
                                  <Data.Text.Internal.Builder.Buffer s
                                   -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                  ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                  ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                                 (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                      (GHC.Types.:
                         @ Data.Text.Internal.Builder.Builder
                         (case ww1 of wild {
                            GHC.Base.Nothing
                            -> Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties3
                                 `cast`
                               (Trans
                                    (forall s.
                                     <Data.Text.Internal.Builder.Buffer s
                                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                     ->_R Sym (GHC.ST.NTCo:ST[0]
                                                   <s>_N <[Data.Text.Internal.Text]>_R))
                                    (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                            GHC.Base.Just x
                            -> (Arhelk.Armenian.Lemma.Data.Common.$fTextShowGrammarQuantity2 x)
                                 `cast`
                               (Trans
                                    (forall s.
                                     <Data.Text.Internal.Builder.Buffer s
                                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                     ->_R Sym (GHC.ST.NTCo:ST[0]
                                                   <s>_N <[Data.Text.Internal.Text]>_R))
                                    (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                         (GHC.Types.:
                            @ Data.Text.Internal.Builder.Builder
                            (case ww2 of wild {
                               GHC.Base.Nothing
                               -> Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties2
                                    `cast`
                                  (Trans
                                       (forall s.
                                        <Data.Text.Internal.Builder.Buffer s
                                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                        ->_R Sym (GHC.ST.NTCo:ST[0]
                                                      <s>_N <[Data.Text.Internal.Text]>_R))
                                       (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                               GHC.Base.Just x
                               -> (TextShow.Data.Bool.$fTextShowBool2 x)
                                    `cast`
                                  (Trans
                                       (forall s.
                                        <Data.Text.Internal.Builder.Buffer s
                                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                        ->_R Sym (GHC.ST.NTCo:ST[0]
                                                      <s>_N <[Data.Text.Internal.Text]>_R))
                                       (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                            (GHC.Types.:
                               @ Data.Text.Internal.Builder.Builder
                               (case ww3 of wild {
                                  GHC.Base.Nothing
                                  -> Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties1
                                       `cast`
                                     (Trans
                                          (forall s.
                                           <Data.Text.Internal.Builder.Buffer s
                                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                           ->_R Sym (GHC.ST.NTCo:ST[0]
                                                         <s>_N <[Data.Text.Internal.Text]>_R))
                                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                                  GHC.Base.Just x
                                  -> (Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory2
                                        x)
                                       `cast`
                                     (Trans
                                          (forall s.
                                           <Data.Text.Internal.Builder.Buffer s
                                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                           ->_R Sym (GHC.ST.NTCo:ST[0]
                                                         <s>_N <[Data.Text.Internal.Text]>_R))
                                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                               (GHC.Types.[] @ Data.Text.Internal.Builder.Builder)))))) -}
d6a708e937b1769a0430532099975cab
  $w$cshowsPrec ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.QualitiveAdjective
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory3
                        w1
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparativeAdjective
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory2
                        w1
                   Arhelk.Armenian.Lemma.Data.Adjective.PossessiveAdjective
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory1
                        w1 }) -}
6a18c31c727d69a55b6291703742b758
  $w$cshowsPrec1 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Arhelk.Armenian.Lemma.Data.Adjective.PositiveDegree
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree3
                        w1
                   Arhelk.Armenian.Lemma.Data.Adjective.ComparitiveDegree
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree2
                        w1
                   Arhelk.Armenian.Lemma.Data.Adjective.SuperlativeDegree
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree1
                        w1 }) -}
fd320cc0455e053fd4d272a1ea4d65d4
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe GHC.Types.Bool
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   ww2 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                   ww3 :: GHC.Base.Maybe GHC.Types.Bool
                   ww4 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase
                       Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties9
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                       Arhelk.Armenian.Lemma.Data.Common.$fShowGrammarQuantity
                       Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties9
                       ww2
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Bool
                       GHC.Show.$fShowBool
                       Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties9
                       ww3
                 } in
                 let {
                   f3 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                       Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory
                       Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties9
                       ww4
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties8
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties7
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties6
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties5
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties6
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties4
                                            (f2
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties3
                                                     (f3
                                                        (GHC.Base.++
                                                           @ GHC.Types.Char
                                                           Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties2
                                                           x))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ x :: GHC.Base.String ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x)) }) -}
d6a708e937b1769a0430532099975cab
  $w$ctoEnum ::
    GHC.Prim.Int#
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 2) of wild1 {
                        GHC.Types.False
                        -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                             ww } }) -}
6a18c31c727d69a55b6291703742b758
  $w$ctoEnum1 ::
    GHC.Prim.Int#
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 2) of wild1 {
                        GHC.Types.False
                        -> Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                             ww } }) -}
d6a708e937b1769a0430532099975cab
  $wa ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> GHC.Prim.MutableByteArray# s
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 7,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
6a18c31c727d69a55b6291703742b758
  $wa1 ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> GHC.Prim.MutableByteArray# s
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 7,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
6e817162c056dd8375ab9d14b48dd1e0
  $wa2 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa14 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa14
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa14 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
7a66568bd591873e75562c6d170781df
  $wa3 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa14 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa14
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa14 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
b622dbec6a2aa5b3f79f28a9af3cb61c
  $wa4 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa14 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa14
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa14 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
00564163ba960c310634487fbda15611
  $wa5 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa14 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa14
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa14
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa14 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
292629ee60927ae297c71e24a5c35e95
  $wgo ::
    [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
    -> (# GHC.Base.Maybe
            Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity,
          GHC.Base.Maybe GHC.Types.Bool,
          GHC.Base.Maybe
            Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
d6a708e937b1769a0430532099975cab
  data AdjectiveCategory
    = QualitiveAdjective | ComparativeAdjective | PossessiveAdjective
    Promotable
6a18c31c727d69a55b6291703742b758
  data AdjectiveDegree
    = PositiveDegree | ComparitiveDegree | SuperlativeDegree
    Promotable
292629ee60927ae297c71e24a5c35e95
  data AdjectiveProperties
    = AdjectiveProperties {_adjCase :: GHC.Base.Maybe
                                         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase,
                           _adjQuantity :: GHC.Base.Maybe
                                             Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity,
                           _adjShort :: GHC.Base.Maybe GHC.Types.Bool,
                           _adjCategory :: GHC.Base.Maybe
                                             Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory}
    Promotable
7004177c19543f7dc4f371aab298d053
  _adjCase ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  RecSel Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
1cc2ab40dfe1b62f44061bf72dd6c92c
  _adjCategory ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  RecSel Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
28cb6bcc5a21d6c00459ff503e0eda7a
  _adjQuantity ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
  RecSel Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
bc603a4d187abbc51f1e8b2f9b51d0ec
  _adjShort ::
    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> GHC.Base.Maybe GHC.Types.Bool
  RecSel Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
22d36765532cf598478db73c06756b48
  adjCase ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase))
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(1*U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                   a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                    case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                      x
                      ds1
                      ds2
                      ds3 })
                   (f1
                      (case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                       ds }))) -}
30816f0052835bf604e5cc9dcbb0fa31
  adjCategory ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe
       Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory))
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U,1*U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                   a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory)
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory ->
                    case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                      ds
                      ds1
                      ds2
                      x })
                   (f1
                      (case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                       ds3 }))) -}
730cef8f6368e3a4ba596adab1639b40
  adjQuantity ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity))
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,1*U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity)
                   a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity)
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity ->
                    case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                      ds
                      x
                      ds2
                      ds3 })
                   (f1
                      (case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                       ds1 }))) -}
2600212b4bf7bb62b9cbf4c4d41880eb
  adjShort ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe GHC.Types.Bool
     -> f (GHC.Base.Maybe GHC.Types.Bool))
    -> Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,1*U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe GHC.Types.Bool
                         -> f (GHC.Base.Maybe GHC.Types.Bool)
                   a10 :: Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe GHC.Types.Bool)
                   @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                   (\ x :: GHC.Base.Maybe GHC.Types.Bool ->
                    case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                    Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties
                      ds
                      ds1
                      x
                      ds3 })
                   (f1
                      (case a10 of wild { Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties ds ds1 ds2 ds3 ->
                       ds2 }))) -}
instance GHC.Enum.Bounded [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fBoundedAdjectiveCategory
instance GHC.Enum.Bounded [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fBoundedAdjectiveDegree
instance GHC.Enum.Enum [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveCategory
instance GHC.Enum.Enum [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fEnumAdjectiveDegree
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveCategory
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveDegree
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fEqAdjectiveProperties
instance GHC.Base.Monoid [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fMonoidAdjectiveProperties
instance GHC.Classes.Ord [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveCategory
instance GHC.Classes.Ord [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fOrdAdjectiveDegree
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveCategory
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveDegree
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fShowAdjectiveProperties
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveProperties]
  = Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveProperties
"SPEC/Arhelk.Armenian.Lemma.Data.Adjective $dmshowbPrec @ AdjectiveCategory" [ALWAYS] forall $dTextShow :: TextShow.Classes.TextShow
                                                                                                             Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
  TextShow.Classes.$dmshowbPrec @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveCategory
                                $dTextShow
  = Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveCategory_$s$dmshowbPrec
"SPEC/Arhelk.Armenian.Lemma.Data.Adjective $dmshowbPrec @ AdjectiveDegree" [ALWAYS] forall $dTextShow :: TextShow.Classes.TextShow
                                                                                                           Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
  TextShow.Classes.$dmshowbPrec @ Arhelk.Armenian.Lemma.Data.Adjective.AdjectiveDegree
                                $dTextShow
  = Arhelk.Armenian.Lemma.Data.Adjective.$fTextShowAdjectiveDegree_$s$dmshowbPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

