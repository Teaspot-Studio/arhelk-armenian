
==================== FINAL INTERFACE ====================
2015-11-03 17:13:24.301254 UTC

interface arhel_5l4tN5K8mLn1X8xpt1McF3:Arhelk.Armenian.Lemma.Data.Substantive 7102
  interface hash: b93ca212e235eb46d500e3925683fb87
  ABI hash: 466e4294624c3dc76010b6ceb0328cf1
  export-list hash: e6f0b0c59fcdc9a59b289a89eff1ce5e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e499c01fe1b40bc06ae73506eadfd2d9
  sig of: Nothing
  used TH splices: True
  where
exports:
  Arhelk.Armenian.Lemma.Data.Substantive.substAnimacy
  Arhelk.Armenian.Lemma.Data.Substantive.substAppellativity
  Arhelk.Armenian.Lemma.Data.Substantive.substCase
  Arhelk.Armenian.Lemma.Data.Substantive.substDeclension
  Arhelk.Armenian.Lemma.Data.Substantive.substQuantity
  Arhelk.Armenian.Lemma.Data.Substantive.Animacy{Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun}
  Arhelk.Armenian.Lemma.Data.Substantive.Appellativity{Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun}
  Arhelk.Armenian.Lemma.Data.Substantive.Declension{Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension}
  Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase{Arhelk.Armenian.Lemma.Data.Substantive.Ablativus Arhelk.Armenian.Lemma.Data.Substantive.Accusativus Arhelk.Armenian.Lemma.Data.Substantive.Dativus Arhelk.Armenian.Lemma.Data.Substantive.Genitivus Arhelk.Armenian.Lemma.Data.Substantive.Nominativus Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis}
  Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties{Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties Arhelk.Armenian.Lemma.Data.Substantive._substAnimacy Arhelk.Armenian.Lemma.Data.Substantive._substAppellativity Arhelk.Armenian.Lemma.Data.Substantive._substCase Arhelk.Armenian.Lemma.Data.Substantive._substDeclension Arhelk.Armenian.Lemma.Data.Substantive._substQuantity}
module dependencies: Arhelk.Armenian.Lemma.Data.Common
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0 base-compat-0.8.2@basec_D4gHocz8sOX8PHzFB3nfQT
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      generic-deriving-1.8.0@gener_1Q2nStr4JSvHfQMGPOhz3e
                      ghc-prim-0.4.0.0 hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy
                      integer-gmp-1.0.0.0
                      lens-family-th-0.4.1.0@lensf_1BXbC5Dg0C5GlgOx3ZVBtX
                      lens-family-core-1.2.0@lensf_41RJsMbLUP4I9prGLUphsy
                      lens-family-1.2.0@lensf_BcsUcH7SCv1L4ogXuYAwHp
                      lens-simple-0.1.0.8@lenss_3ClGSemuCIs1em35IPgh6B
                      mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR
                      semigroups-0.16.2.2@semig_509rjK42Yeb8JAwFst5KmO
                      template-haskell-2.10.0.0 text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      text-show-2@texts_6msSD0wSAlK5unkkd9ynxr
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Applicative
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Concurrent
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Exception
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Control.Monad.ST
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Array
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Bool
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.ByteString
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Char
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Complex
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Data
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Dynamic
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Either
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Fixed
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Floating
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Functor.Identity
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Integral
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.List
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Maybe
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Monoid
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Ord
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Proxy
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Ratio
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Text
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Tuple
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Type.Coercion
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Type.Equality
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Typeable
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Version
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Data.Void
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Foreign.C.Types
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Foreign.Ptr
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Event
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Fingerprint
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Generics
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.RTS.Flags
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.StaticPtr
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.Stats
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.GHC.TypeLits
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Numeric.Natural
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.System.Exit
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.System.IO
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.System.Posix.Types
         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Text.Read
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics base-4.8.1.0:GHC.TypeLits
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR:Text.PrettyPrint.HughesPJ
                         semigroups-0.16.2.2@semig_509rjK42Yeb8JAwFst5KmO:Data.List.NonEmpty
                         semigroups-0.16.2.2@semig_509rjK42Yeb8JAwFst5KmO:Data.Semigroup
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Classes
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashSet
import  -/  Arhelk.Armenian.Lemma.Data.Common 0fe48a704519c299a44db62ee358c743
  exports: 5e7ee2cc6a5ba5ff77e8c3225bcb9b1a
  GrammarQuantity 09cc9e9c842348ab498f3eeee3ff6d2c
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:Data.Monoid bd73caba6e77f9944cb89ef5bec300c6
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Enum d0db4d619cd8916cc7a23444816222af
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  lens-family-th-0.4.1.0@lensf_1BXbC5Dg0C5GlgOx3ZVBtX:Lens.Family2.TH 7cc9ba1c82f1aa0ef8b5e3d05747f5ba
import  -/  lens-simple-0.1.0.8@lenss_3ClGSemuCIs1em35IPgh6B:Lens.Simple 0415aae47fc565920c4518de36a394c8
import  -/  text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow f98816fc41e1809d42ba206af16c7297
import  -/  text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Classes 2c021982bdb0927c661f3d4c9188a464
import  -/  text-show-2@texts_6msSD0wSAlK5unkkd9ynxr:TextShow.Utils c7b192e03bc8b48d2b27d4f2a73e0aa2
7ad1962ebbded5db51490283f728cec8
  $fBoundedAnimacy ::
    GHC.Enum.Bounded Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                  Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                  Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -}
5a1289615014fb06f0949558fffcecc0
  $fBoundedAppellativity ::
    GHC.Enum.Bounded
      Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                  Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -}
ba88335028c7b70b17ce669253dfd20e
  $fBoundedDeclension ::
    GHC.Enum.Bounded Arhelk.Armenian.Lemma.Data.Substantive.Declension
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                  Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                  Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fBoundedGrammarCase ::
    GHC.Enum.Bounded Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                  Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy ::
    GHC.Enum.Enum Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$csucc
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$cpred
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$ctoEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$cfromEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$cenumFrom
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$cenumFromThen
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$cenumFromTo
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$cenumFromThenTo -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy1 ::
    GHC.Prim.Int# -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 1, Strictness: <L,U>b -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy2 :: [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_go2
                   1) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy3 :: [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_go3
                   0) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy4 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Strictness: b -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy5 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Strictness: b -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$cenumFrom ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy3
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy2 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$cenumFromThen ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_c1
                                    (GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_c1
                                    (GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -> $j1 1 }
                 } in
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -> $j 1 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$cenumFromThenTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   x2 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_c
                                     (GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_c
                                     (GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                                     x4
                                     x5
                                     0 }
                           Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_c
                                     (GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_c
                                     (GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                                     x4
                                     x5
                                     1 } }
                     } in
                     case x2 of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -> $j1 1 }
                 } in
                 case x1 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -> $j 1 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$cenumFromTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_go1 x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy }
                       Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_go x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy } }
                 } in
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -> $j 1 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$cfromEnum ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> GHC.Types.I# 0
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> GHC.Types.I# 1 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$cpred ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy4
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$csucc ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy5 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_$ctoEnum ::
    GHC.Types.Int -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$ctoEnum ww1 }) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_c ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.Animacy] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy_$ctoEnum x)
                   ys) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_c1 ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.Animacy] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   (case x of wild { GHC.Types.I# a18 ->
                    GHC.Prim.tagToEnum#
                      @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                      a18 })
                   ys) -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_go ::
    GHC.Prim.Int# -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 1, Strictness: <L,U> -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_go1 ::
    GHC.Prim.Int# -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 1, Strictness: <L,U> -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_go2 ::
    GHC.Prim.Int# -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
7ad1962ebbded5db51490283f728cec8
  $fEnumAnimacy_go3 ::
    GHC.Prim.Int# -> [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity ::
    GHC.Enum.Enum Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$csucc
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$cpred
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$ctoEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$cfromEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$cenumFrom
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$cenumFromThen
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$cenumFromTo
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$cenumFromThenTo -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity1 ::
    GHC.Prim.Int#
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 1, Strictness: <L,U>b -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity2 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_go2
                   1) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity3 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_go3
                   0) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity4 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Strictness: b -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity5 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Strictness: b -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$cenumFrom ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity3
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity2 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$cenumFromThen ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> $j1 1 }
                 } in
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> $j 1 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$cenumFromThenTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   x2 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                                     x4
                                     x5
                                     0 }
                           Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                                     x4
                                     x5
                                     1 } }
                     } in
                     case x2 of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> $j1 1 }
                 } in
                 case x1 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> $j 1 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$cenumFromTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_go1
                                 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity }
                       Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_go x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity } }
                 } in
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> $j 1 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$cfromEnum ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> GHC.Types.I# 0
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> GHC.Types.I# 1 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$cpred ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity4
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$csucc ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity5 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_$ctoEnum ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$ctoEnum1 ww1 }) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_c ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity_$ctoEnum
                      x)
                   ys) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_c1 ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   (case x of wild { GHC.Types.I# a18 ->
                    GHC.Prim.tagToEnum#
                      @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                      a18 })
                   ys) -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_go ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 1, Strictness: <L,U> -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_go1 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 1, Strictness: <L,U> -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_go2 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
5a1289615014fb06f0949558fffcecc0
  $fEnumAppellativity_go3 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension ::
    GHC.Enum.Enum Arhelk.Armenian.Lemma.Data.Substantive.Declension
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$csucc
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$cpred
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$ctoEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$cfromEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$cenumFrom
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$cenumFromThen
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$cenumFromTo
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$cenumFromThenTo -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension1 ::
    GHC.Prim.Int# -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 1, Strictness: <L,U>b -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension2 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_go3
                   2) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension3 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_go4
                   1) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension4 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_go5
                   0) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension5 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Strictness: b -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension6 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Strictness: b -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$cenumFrom ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension4
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension3
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension2 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$cenumFromThen ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c1
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 2 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension -> $j1 2 }
                 } in
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension -> $j 1
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> $j 2 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$cenumFromThenTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   x2 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                     x4
                                     x5
                                     0 }
                           Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                     x4
                                     x5
                                     1 }
                           Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                     x4
                                     x5
                                     2
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                                     Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_c
                                     (GHC.Types.[]
                                        @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                                     x4
                                     x5
                                     2 } }
                     } in
                     case x2 of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension -> $j1 2 }
                 } in
                 case x1 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension -> $j 1
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> $j 2 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$cenumFromTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_go2 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.Declension }
                       Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_go1 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.Declension }
                       Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_go x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.Declension } }
                 } in
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension -> $j 1
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> $j 2 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$cfromEnum ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> GHC.Types.I# 0
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> GHC.Types.I# 1
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> GHC.Types.I# 2 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$cpred ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension5
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$csucc ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension6 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_$ctoEnum ::
    GHC.Types.Int -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$ctoEnum2 ww1 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_c ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.Declension] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension_$ctoEnum
                      x)
                   ys) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_c1 ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.Declension] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   (case x of wild { GHC.Types.I# a18 ->
                    GHC.Prim.tagToEnum#
                      @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                      a18 })
                   ys) -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_go ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, Strictness: <L,U> -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_go1 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, Strictness: <L,U> -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_go2 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, Strictness: <L,U> -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_go3 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_go4 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
ba88335028c7b70b17ce669253dfd20e
  $fEnumDeclension_go5 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase ::
    GHC.Enum.Enum Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$csucc
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$cpred
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$ctoEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$cfromEnum
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$cenumFrom
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$cenumFromThen
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$cenumFromTo
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_$cenumFromThenTo -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase1 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go6
                   5) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase2 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go7
                   4) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase3 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go8
                   3) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase4 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go9
                   2) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase5 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go10
                   1) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase6 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go11
                   0) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase7 ::
    GHC.Prim.Int# -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 1, Strictness: <L,U>b -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase8 ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Strictness: b -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase9 ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Strictness: b -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$cenumFrom ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase6
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase5
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase4
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase3
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase2
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase1 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$cenumFromThen ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_c
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
                                    Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_c
                                    (GHC.Types.[]
                                       @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 5 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.Nominativus -> $j1 0
                       Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> $j1 1
                       Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> $j1 2
                       Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> $j1 3
                       Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> $j1 4
                       Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis -> $j1 5 }
                 } in
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> $j 1
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> $j 2
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> $j 3
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> $j 4
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> $j 5 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$cenumFromThenTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$cenumFromTo ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 let {
                   $j :: GHC.Prim.Int#
                         -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go5 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase }
                       Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go4 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase }
                       Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go3 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase }
                       Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 3) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go2 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase }
                       Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 4) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go1 x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase }
                       Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 5) of wild1 {
                            GHC.Types.False
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase_go x1
                            GHC.Types.True
                            -> GHC.Types.[]
                                 @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase } }
                 } in
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus -> $j 0
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> $j 1
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> $j 2
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> $j 3
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> $j 4
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> $j 5 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$cfromEnum ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case w of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> GHC.Types.I# 0
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.I# 1
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.I# 2
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> GHC.Types.I# 3
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.I# 4
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> GHC.Types.I# 5 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$cpred ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase8
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$csucc ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase9 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_$ctoEnum ::
    GHC.Types.Int -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$ctoEnum3 ww1 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_c ::
    GHC.Types.Int
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase] ->
                 GHC.Types.:
                   @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   (case x of wild { GHC.Types.I# a18 ->
                    GHC.Prim.tagToEnum#
                      @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                      a18 })
                   ys) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go1 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go10 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go11 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go2 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go3 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go4 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go5 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go6 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go7 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go8 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEnumGrammarCase_go9 ::
    GHC.Prim.Int#
    -> [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
7ad1962ebbded5db51490283f728cec8
  $fEqAnimacy ::
    GHC.Classes.Eq Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqAnimacy_$c==
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqAnimacy_$c/= -}
7ad1962ebbded5db51490283f728cec8
  $fEqAnimacy_$c/= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.False } }) -}
7ad1962ebbded5db51490283f728cec8
  $fEqAnimacy_$c== ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   ds1 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case ds1 of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case ds1 of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.True } }) -}
5a1289615014fb06f0949558fffcecc0
  $fEqAppellativity ::
    GHC.Classes.Eq Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqAppellativity_$c==
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqAppellativity_$c/= -}
5a1289615014fb06f0949558fffcecc0
  $fEqAppellativity_$c/= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.False } }) -}
5a1289615014fb06f0949558fffcecc0
  $fEqAppellativity_$c== ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   ds1 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case ds1 of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case ds1 of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.True } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEqDeclension ::
    GHC.Classes.Eq Arhelk.Armenian.Lemma.Data.Substantive.Declension
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqDeclension_$c==
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqDeclension_$c/= -}
ba88335028c7b70b17ce669253dfd20e
  $fEqDeclension_$c/= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.False } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fEqDeclension_$c== ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   ds1 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.True } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEqGrammarCase ::
    GHC.Classes.Eq Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqGrammarCase_$c==
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqGrammarCase_$c/= -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEqGrammarCase_$c/= ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fEqGrammarCase_$c== ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   ds1 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True } }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fEqSubstantiveProperties ::
    GHC.Classes.Eq
      Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqSubstantiveProperties_$c==
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqSubstantiveProperties_$c/= -}
da3683f0ac596fb0c84206cac5ad7a63
  $fEqSubstantiveProperties_$c/= ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case Arhelk.Armenian.Lemma.Data.Substantive.$fEqSubstantiveProperties_$c==
                        a18
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fEqSubstantiveProperties_$c== ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   w1 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case w of ww { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ww7 ww8 ww9 ww10 ww11 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fMonoidSubstantiveProperties ::
    GHC.Base.Monoid
      Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                  Arhelk.Armenian.Lemma.Data.Substantive.$fMonoidSubstantiveProperties_$cmempty
                  Arhelk.Armenian.Lemma.Data.Substantive.$fMonoidSubstantiveProperties_$cmappend
                  Arhelk.Armenian.Lemma.Data.Substantive.$fMonoidSubstantiveProperties_$cmconcat -}
da3683f0ac596fb0c84206cac5ad7a63
  $fMonoidSubstantiveProperties_$cmappend ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,1*U)><L,U(1*U,1*U,1*U,1*U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   w1 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case Arhelk.Armenian.Lemma.Data.Substantive.$w$cmappend
                        w
                        w1 of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fMonoidSubstantiveProperties_$cmconcat ::
    [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties] ->
                 case Arhelk.Armenian.Lemma.Data.Substantive.$wgo
                        w of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fMonoidSubstantiveProperties_$cmempty ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                   (GHC.Base.Nothing @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity)
                   (GHC.Base.Nothing
                      @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy ::
    GHC.Classes.Ord Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqAnimacy
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$ccompare
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$c<
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$c<=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$c>
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$c>=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$cmax
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy_$cmin -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$c< ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$c<= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.True } }) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$c> ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.False } }) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$c>= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$ccompare ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                        -> GHC.Types.EQ } }) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$cmax ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun -> y
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun } }) -}
7ad1962ebbded5db51490283f728cec8
  $fOrdAnimacy_$cmin ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun }
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun -> y }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity ::
    GHC.Classes.Ord
      Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqAppellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$ccompare
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$c<
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$c<=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$c>
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$c>=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$cmax
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity_$cmin -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$c< ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$c<= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.True } }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$c> ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.False } }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$c>= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$ccompare ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                        -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                        -> GHC.Types.EQ } }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$cmax ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun -> y
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun } }) -}
5a1289615014fb06f0949558fffcecc0
  $fOrdAppellativity_$cmin ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun }
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun -> y }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension ::
    GHC.Classes.Ord Arhelk.Armenian.Lemma.Data.Substantive.Declension
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqDeclension
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$ccompare
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$c<
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$c<=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$c>
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$c>=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$cmax
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension_$cmin -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$c< ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$c<= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.True } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$c> ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.False } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$c>= ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$ccompare ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> GHC.Types.EQ } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$cmax ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension -> y
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case y of wild1 {
                        DEFAULT -> Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension } }) -}
ba88335028c7b70b17ce669253dfd20e
  $fOrdDeclension_$cmin ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension }
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> case y of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        -> Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                        Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        -> Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                        Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                        -> Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension }
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension -> y }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase ::
    GHC.Classes.Ord Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.$fEqGrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$ccompare
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$c<
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$c<=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$c>
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$c>=
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$cmax
                  Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase_$cmin -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$c< ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$c<= ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.True } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$c> ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$c>= ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.False
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.False }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$ccompare ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a18 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   b :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case a18 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case b of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.LT
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus -> GHC.Types.EQ
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.LT }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> GHC.Types.EQ } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$cmax ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus -> y
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case y of wild1 {
                        DEFAULT -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case y of wild1 {
                        DEFAULT -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case y of wild1 {
                        DEFAULT -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case y of wild1 {
                        DEFAULT -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fOrdGrammarCase_$cmin ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   y :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> case y of wild1 { DEFAULT ->
                      Arhelk.Armenian.Lemma.Data.Substantive.Nominativus }
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> case y of wild1 {
                        Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Genitivus }
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Dativus }
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Accusativus }
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                        Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                        -> Arhelk.Armenian.Lemma.Data.Substantive.Ablativus }
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis -> y }) -}
7ad1962ebbded5db51490283f728cec8
  $fShowAnimacy ::
    GHC.Show.Show Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy_$cshow
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy_$cshowList -}
7ad1962ebbded5db51490283f728cec8
  $fShowAnimacy1 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   eta :: GHC.Base.String ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy3)
                        eta
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy2)
                        eta }) -}
8cc7fb3cbfa3d45ade2ac207151c9937
  $fShowAnimacy2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InanimateNoun"#) -}
acd1e41cad5c293dad606190694b7b6e
  $fShowAnimacy3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AnimateNoun"#) -}
7ad1962ebbded5db51490283f728cec8
  $fShowAnimacy_$cshow ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy3
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy2 }) -}
7ad1962ebbded5db51490283f728cec8
  $fShowAnimacy_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Animacy] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy1) -}
7ad1962ebbded5db51490283f728cec8
  $fShowAnimacy_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AnimateNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy3)
                        eta
                   Arhelk.Armenian.Lemma.Data.Substantive.InanimateNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy2)
                        eta }) -}
5a1289615014fb06f0949558fffcecc0
  $fShowAppellativity ::
    GHC.Show.Show Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity_$cshow
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity_$cshowList -}
5a1289615014fb06f0949558fffcecc0
  $fShowAppellativity1 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   eta :: GHC.Base.String ->
                 case ds of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity3)
                        eta
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity2)
                        eta }) -}
d2475054d4d928dab2c5e4659208e3b2
  $fShowAppellativity2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ProperNoun"#) -}
c8dfd71c3cffab33780e2367cfcd2f39
  $fShowAppellativity3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AppellativeNoun"#) -}
5a1289615014fb06f0949558fffcecc0
  $fShowAppellativity_$cshow ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity3
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity2 }) -}
5a1289615014fb06f0949558fffcecc0
  $fShowAppellativity_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity1) -}
5a1289615014fb06f0949558fffcecc0
  $fShowAppellativity_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.AppellativeNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity3)
                        eta
                   Arhelk.Armenian.Lemma.Data.Substantive.ProperNoun
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity2)
                        eta }) -}
ba88335028c7b70b17ce669253dfd20e
  $fShowDeclension ::
    GHC.Show.Show Arhelk.Armenian.Lemma.Data.Substantive.Declension
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension_$cshow
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension_$cshowList -}
55ba70b1d3a8efe11ce5b659ac74197f
  $fShowDeclension1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ThirdDeclension"#) -}
36ef8a4501d98b2fa09f6eba6fd664fd
  $fShowDeclension2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SecondDeclension"#) -}
4dd321909e09e9002c61d5ae72bd4063
  $fShowDeclension3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FirstDeclension"#) -}
ba88335028c7b70b17ce669253dfd20e
  $fShowDeclension_$cshow ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                 case x of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension3
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension2
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension1 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fShowDeclension_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowsPrec) -}
ba88335028c7b70b17ce669253dfd20e
  $fShowDeclension_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   w2 :: GHC.Base.String ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowsPrec w1 w2) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fShowGrammarCase ::
    GHC.Show.Show Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase_$cshow
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase_$cshowList -}
29ebbeadec9f5708f88e4d5f02738cf7
  $fShowGrammarCase1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Praepositionalis"#) -}
bbdefad58947c1623df1de270b55493f
  $fShowGrammarCase2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Ablativus"#) -}
f152e7374f16b41d77042e0fb0c647d6
  $fShowGrammarCase3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Accusativus"#) -}
8113b91a21888f741bd3b8bb1e882ac1
  $fShowGrammarCase4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Dativus"#) -}
b61e3f73ef24cefb307321ecae2d9ce9
  $fShowGrammarCase5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Genitivus"#) -}
569264d4c739452732fcda738f9823ca
  $fShowGrammarCase6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nominativus"#) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fShowGrammarCase_$cshow ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fShowGrammarCase_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowsPrec1) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fShowGrammarCase_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   w2 :: GHC.Base.String ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowsPrec1 w1 w2) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fShowSubstantiveProperties ::
    GHC.Show.Show
      Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties_$cshowsPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties_$cshow
                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties_$cshowList -}
da3683f0ac596fb0c84206cac5ad7a63
  $fShowSubstantiveProperties1 ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case w of ww { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ww1 ww2 ww3 ww4 ww5 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowsPrec2
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
a5631db5d11bc14f6745e6e64f9ad139
  $fShowSubstantiveProperties10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
3e2154aaaf5b3e0a86d1c437504572fb
  $fShowSubstantiveProperties2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
8c39ee60a197dbb76a70eb580610de26
  $fShowSubstantiveProperties3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_substCase = "#) -}
c1d17a1a7472d1d56a368372ab08618d
  $fShowSubstantiveProperties4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_substQuantity = "#) -}
4e053db228541548bf88ed54832e4101
  $fShowSubstantiveProperties5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "_substDeclension = "#) -}
c0554cc08a377f75cd96a6c19da89965
  $fShowSubstantiveProperties6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_substAnimacy = "#) -}
40642dc39ec97b005ff7f55cf987445f
  $fShowSubstantiveProperties7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
39c49be4fb1984d58ce9cb42ce17c946
  $fShowSubstantiveProperties8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "_substAppellativity = "#) -}
5c1da69043834328bfffa0de0c02aea0
  $fShowSubstantiveProperties9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "SubstantiveProperties {"#) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fShowSubstantiveProperties_$cshow ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fShowSubstantiveProperties_$cshowList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties1) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fShowSubstantiveProperties_$cshowsPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ww3 ww4 ww5 ww6 ww7 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 } }) -}
7ad1962ebbded5db51490283f728cec8
  $fTextShowAnimacy ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy_$s$dmshowbPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy_$cshowb
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy_$cshowbList -}
7ad1962ebbded5db51490283f728cec8
  $fTextShowAnimacy1 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4, Strictness: <S,1*U> -}
7ad1962ebbded5db51490283f728cec8
  $fTextShowAnimacy2 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   @ s
                   w1 :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w2 :: Data.Text.Internal.Builder.Buffer s
                   w3 :: GHC.Prim.State# s[OneShot] ->
                 case w2 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa
                   w
                   @ s
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3 }) -}
7ad1962ebbded5db51490283f728cec8
  $fTextShowAnimacy_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy2
                  `cast`
                (<Arhelk.Armenian.Lemma.Data.Substantive.Animacy>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
7ad1962ebbded5db51490283f728cec8
  $fTextShowAnimacy_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <S,1*U>,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy1
                   `cast`
                 (<[Arhelk.Armenian.Lemma.Data.Substantive.Animacy]>_R
                  ->_R Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))) -}
7ad1962ebbded5db51490283f728cec8
  $fTextShowAnimacy_$s$dmshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   @ s
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                           -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta2 :: Data.Text.Internal.Builder.Buffer s
                   eta3 :: GHC.Prim.State# s[OneShot] ->
                 ((Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy_$cshowb
                     eta)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    eta1
                    eta2)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta3)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Arhelk.Armenian.Lemma.Data.Substantive.Animacy>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
5a1289615014fb06f0949558fffcecc0
  $fTextShowAppellativity ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity_$s$dmshowbPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity_$cshowb
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity_$cshowbList -}
5a1289615014fb06f0949558fffcecc0
  $fTextShowAppellativity1 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4, Strictness: <S,1*U> -}
5a1289615014fb06f0949558fffcecc0
  $fTextShowAppellativity2 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   @ s
                   w1 :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w2 :: Data.Text.Internal.Builder.Buffer s
                   w3 :: GHC.Prim.State# s[OneShot] ->
                 case w2 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa1
                   w
                   @ s
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3 }) -}
5a1289615014fb06f0949558fffcecc0
  $fTextShowAppellativity_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity2
                  `cast`
                (<Arhelk.Armenian.Lemma.Data.Substantive.Appellativity>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
5a1289615014fb06f0949558fffcecc0
  $fTextShowAppellativity_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <S,1*U>,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity1
                   `cast`
                 (<[Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]>_R
                  ->_R Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))) -}
5a1289615014fb06f0949558fffcecc0
  $fTextShowAppellativity_$s$dmshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   @ s
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                           -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta2 :: Data.Text.Internal.Builder.Buffer s
                   eta3 :: GHC.Prim.State# s[OneShot] ->
                 ((Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity_$cshowb
                     eta)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    eta1
                    eta2)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta3)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Arhelk.Armenian.Lemma.Data.Substantive.Appellativity>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
ba88335028c7b70b17ce669253dfd20e
  $fTextShowDeclension ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Substantive.Declension
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension_$s$dmshowbPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension_$cshowb
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension_$cshowbList -}
ba88335028c7b70b17ce669253dfd20e
  $fTextShowDeclension1 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4, Strictness: <S,1*U> -}
ba88335028c7b70b17ce669253dfd20e
  $fTextShowDeclension2 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   @ s
                   w1 :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w2 :: Data.Text.Internal.Builder.Buffer s
                   w3 :: GHC.Prim.State# s[OneShot] ->
                 case w2 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa2
                   w
                   @ s
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3 }) -}
ba88335028c7b70b17ce669253dfd20e
  $fTextShowDeclension_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension2
                  `cast`
                (<Arhelk.Armenian.Lemma.Data.Substantive.Declension>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
ba88335028c7b70b17ce669253dfd20e
  $fTextShowDeclension_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <S,1*U>,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension1
                   `cast`
                 (<[Arhelk.Armenian.Lemma.Data.Substantive.Declension]>_R
                  ->_R Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))) -}
ba88335028c7b70b17ce669253dfd20e
  $fTextShowDeclension_$s$dmshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   @ s
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                           -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta2 :: Data.Text.Internal.Builder.Buffer s
                   eta3 :: GHC.Prim.State# s[OneShot] ->
                 ((Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension_$cshowb
                     eta)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    eta1
                    eta2)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta3)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Arhelk.Armenian.Lemma.Data.Substantive.Declension>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fTextShowGrammarCase ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase_$s$dmshowbPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase_$cshowb
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase_$cshowbList -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fTextShowGrammarCase1 ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4, Strictness: <S,1*U> -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fTextShowGrammarCase2 ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   @ s
                   w1 :: Data.Text.Internal.Builder.Buffer s
                         -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w2 :: Data.Text.Internal.Builder.Buffer s
                   w3 :: GHC.Prim.State# s[OneShot] ->
                 case w2 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa3
                   w
                   @ s
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fTextShowGrammarCase_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase2
                  `cast`
                (<Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fTextShowGrammarCase_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 4, Strictness: <S,1*U>,
     Unfolding: (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase1
                   `cast`
                 (<[Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]>_R
                  ->_R Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $fTextShowGrammarCase_$s$dmshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   @ s
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                           -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta2 :: Data.Text.Internal.Builder.Buffer s
                   eta3 :: GHC.Prim.State# s[OneShot] ->
                 ((Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase_$cshowb
                     eta)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    eta1
                    eta2)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta3)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase>_R
                 ->_R Trans
                          (forall s.
                           <Data.Text.Internal.Builder.Buffer s
                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                           ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fTextShowSubstantiveProperties ::
    TextShow.Classes.TextShow
      Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties_$cshowbPrec
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties_$cshowb
                  Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties_$cshowbList -}
34642722dfb4f4968a1ea4b9194fa6ad
  $fTextShowSubstantiveProperties1 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa4
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
5e56710e4a0ab31cebe36a4d4775b5cd
  $fTextShowSubstantiveProperties2 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa5
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
2f7190df53c7125e1dc886fb48c5bb65
  $fTextShowSubstantiveProperties3 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa6
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
830246088a44e0c110c0c8b5138740c1
  $fTextShowSubstantiveProperties4 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa7
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
dc7f39f70d021b598aa5f7a39e084b92
  $fTextShowSubstantiveProperties5 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S,1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   w1 :: Data.Text.Internal.Builder.Buffer s
                   w2 :: GHC.Prim.State# s[OneShot] ->
                 case w1 of ww { Data.Text.Internal.Builder.Buffer ww1 ww2 ww3 ww4 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$wa8
                   @ s
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
e277610e5f8caa9af76dfde6d4f30cd1
  $fTextShowSubstantiveProperties6 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3,
     Unfolding: (\ @ s
                   k :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ds1 :: Data.Text.Internal.Builder.Buffer s
                   eta :: GHC.Prim.State# s[OneShot] ->
                 case ds1 of wild1 { Data.Text.Internal.Builder.Buffer dt dt1 dt2 dt3 ->
                 letrec {
                   $wa23 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww :: GHC.Prim.MutableByteArray# s
                       ww1 :: GHC.Prim.Int#
                       ww2 :: GHC.Prim.Int#
                       ww3 :: GHC.Prim.Int#
                       w :: [GHC.Types.Char]
                       w1 :: GHC.Prim.State# s[OneShot] ->
                     case w of wild2 {
                       []
                       -> (k (Data.Text.Internal.Builder.Buffer @ s ww ww1 ww2 ww3))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w1
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww3 1) of wild3 {
                            GHC.Types.False
                            -> case ipv4 of wild4 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild5 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w1 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa23
                                      ww
                                      ww1
                                      (GHC.Prim.+# ww2 2)
                                      (GHC.Prim.-# ww3 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww
                                           (GHC.Prim.+# ww1 ww2)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w1 of s2# { DEFAULT ->
                                    $wa23
                                      ww
                                      ww1
                                      (GHC.Prim.+# ww2 1)
                                      (GHC.Prim.-# ww3 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w1 of ds4 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww1
                                       ww2)
                                    (case $wa23
                                            ipv9
                                            0
                                            0
                                            112
                                            wild2
                                            ipv8 of ds5 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa23
                   dt
                   dt1
                   dt2
                   dt3
                   Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties_str
                   eta }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fTextShowSubstantiveProperties_$cshowb ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case w of ww { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ww1 ww2 ww3 ww4 ww5 ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowb
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fTextShowSubstantiveProperties_$cshowbList ::
    [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ eta :: [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties] ->
                 case eta of wild {
                   []
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties6
                        `cast`
                      (Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                   : x xs
                   -> let {
                        ds :: Data.Text.Internal.Builder.Builder
                        = case x of ww { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ww1 ww2 ww3 ww4 ww5 ->
                          Arhelk.Armenian.Lemma.Data.Substantive.$w$cshowb
                            ww1
                            ww2
                            ww3
                            ww4
                            ww5 }
                      } in
                      let {
                        ds1 :: Data.Text.Internal.Builder.Builder
                        = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties_go
                            xs
                      } in
                      (\ @ s
                         eta1 :: Data.Text.Internal.Builder.Buffer s
                                 -> GHC.ST.ST s [Data.Text.Internal.Text] ->
                       let {
                         eta2 :: Data.Text.Internal.Builder.Buffer s
                                 -> GHC.ST.ST s [Data.Text.Internal.Text]
                         = ds `cast` (Data.Text.Internal.Builder.NTCo:Builder[0])
                             @ s
                             (ds1 `cast` (Data.Text.Internal.Builder.NTCo:Builder[0]) @ s eta1)
                       } in
                       \ eta3 :: Data.Text.Internal.Builder.Buffer s
                         eta4 :: GHC.Prim.State# s[OneShot] ->
                       case eta3 of wild1 { Data.Text.Internal.Builder.Buffer dt dt1 dt2 dt3 ->
                       case GHC.Prim.tagToEnum#
                              @ GHC.Types.Bool
                              (GHC.Prim.<=# 2 dt3) of wild2 {
                         GHC.Types.False
                         -> case dt2 of wild3 {
                              DEFAULT
                              -> (# eta4,
                                    GHC.Types.:
                                      @ Data.Text.Internal.Text
                                      (Data.Text.Internal.Text
                                         dt
                                           `cast`
                                         (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                s) GHC.Prim.ByteArray#)
                                         dt1
                                         wild3)
                                      (case GHC.Prim.newByteArray#
                                              @ s
                                              224
                                              eta4 of ds2 { (#,#) ipv1 ipv2 ->
                                       case GHC.Prim.writeWord16Array#
                                              @ s
                                              ipv2
                                              0
                                              __word 91
                                              ipv1 of s2# { DEFAULT ->
                                       case (eta2
                                               (Data.Text.Internal.Builder.Buffer @ s ipv2 0 1 111))
                                              `cast`
                                            (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                                              s2# of ds3 { (#,#) ipv4 ipv5 ->
                                       ipv5 } } }) #)
                              0
                              -> case GHC.Prim.newByteArray#
                                        @ s
                                        224
                                        eta4 of ds2 { (#,#) ipv1 ipv2 ->
                                 case GHC.Prim.writeWord16Array#
                                        @ s
                                        ipv2
                                        0
                                        __word 91
                                        ipv1 of s2# { DEFAULT ->
                                 (eta2 (Data.Text.Internal.Builder.Buffer @ s ipv2 0 1 111))
                                   `cast`
                                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                                   s2# } } }
                         GHC.Types.True
                         -> case GHC.Prim.writeWord16Array#
                                   @ s
                                   dt
                                   (GHC.Prim.+# dt1 dt2)
                                   __word 91
                                   eta4 of s2# { DEFAULT ->
                            (eta2
                               (Data.Text.Internal.Builder.Buffer
                                  @ s
                                  dt
                                  dt1
                                  (GHC.Prim.+# dt2 1)
                                  (GHC.Prim.-# dt3 1)))
                              `cast`
                            (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                              s2# } } })
                        `cast`
                      (Trans
                           (forall s.
                            <Data.Text.Internal.Builder.Buffer s
                             -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                            ->_R <Data.Text.Internal.Builder.Buffer s>_R
                            ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) }) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fTextShowSubstantiveProperties_$cshowbPrec ::
    GHC.Types.Int
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties_$cshowb
                   eta) -}
da3683f0ac596fb0c84206cac5ad7a63
  $fTextShowSubstantiveProperties_go ::
    [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 1, Strictness: <S,1*U> -}
a90c9ec99ded45722910118d3c69660f
  $fTextShowSubstantiveProperties_str :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "[]"#) -}
689e89cbf9104c533ad7120173b71e55
  $w$c== ::
    GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
da3683f0ac596fb0c84206cac5ad7a63
  $w$cmappend ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> (# GHC.Base.Maybe
            Arhelk.Armenian.Lemma.Data.Substantive.Appellativity,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity,
          GHC.Base.Maybe
            Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(1*U,1*U,1*U,1*U,1*U)><L,U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   w1 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 (# case w of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    case ds of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds5 ds6 ds7 ds8 ds9 ->
                         ds5 }
                      GHC.Base.Just ipv -> wild1 } },
                    case w of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    case ds1 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds5 ds6 ds7 ds8 ds9 ->
                         ds6 }
                      GHC.Base.Just ipv -> wild1 } },
                    case w of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    case ds2 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds5 ds6 ds7 ds8 ds9 ->
                         ds7 }
                      GHC.Base.Just ipv -> wild1 } },
                    case w of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    case ds3 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds5 ds6 ds7 ds8 ds9 ->
                         ds8 }
                      GHC.Base.Just ipv -> wild1 } },
                    case w of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    case ds4 of wild1 {
                      GHC.Base.Nothing
                      -> case w1 of wild2 { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds5 ds6 ds7 ds8 ds9 ->
                         ds9 }
                      GHC.Base.Just ipv -> wild1 } } #)) -}
27bc3ccc92c23ddac7cf95e871be4d87
  $w$cshowb ::
    GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> Data.Text.Internal.Builder.Builder
  {- Arity: 5, Strictness: <L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   ww1 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   ww2 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   ww3 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                   ww4 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 TextShow.Utils.unwordsB
                   (GHC.Types.:
                      @ Data.Text.Internal.Builder.Builder
                      (case ww of wild {
                         GHC.Base.Nothing
                         -> Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties5
                              `cast`
                            (Trans
                                 (forall s.
                                  <Data.Text.Internal.Builder.Buffer s
                                   -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                  ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                  ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                                 (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                         GHC.Base.Just x
                         -> (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity2
                               x)
                              `cast`
                            (Trans
                                 (forall s.
                                  <Data.Text.Internal.Builder.Buffer s
                                   -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                  ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                  ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                                 (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                      (GHC.Types.:
                         @ Data.Text.Internal.Builder.Builder
                         (case ww1 of wild {
                            GHC.Base.Nothing
                            -> Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties4
                                 `cast`
                               (Trans
                                    (forall s.
                                     <Data.Text.Internal.Builder.Buffer s
                                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                     ->_R Sym (GHC.ST.NTCo:ST[0]
                                                   <s>_N <[Data.Text.Internal.Text]>_R))
                                    (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                            GHC.Base.Just x
                            -> (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy2 x)
                                 `cast`
                               (Trans
                                    (forall s.
                                     <Data.Text.Internal.Builder.Buffer s
                                      -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                     ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                     ->_R Sym (GHC.ST.NTCo:ST[0]
                                                   <s>_N <[Data.Text.Internal.Text]>_R))
                                    (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                         (GHC.Types.:
                            @ Data.Text.Internal.Builder.Builder
                            (case ww2 of wild {
                               GHC.Base.Nothing
                               -> Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties3
                                    `cast`
                                  (Trans
                                       (forall s.
                                        <Data.Text.Internal.Builder.Buffer s
                                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                        ->_R Sym (GHC.ST.NTCo:ST[0]
                                                      <s>_N <[Data.Text.Internal.Text]>_R))
                                       (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                               GHC.Base.Just x
                               -> (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension2 x)
                                    `cast`
                                  (Trans
                                       (forall s.
                                        <Data.Text.Internal.Builder.Buffer s
                                         -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                        ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                        ->_R Sym (GHC.ST.NTCo:ST[0]
                                                      <s>_N <[Data.Text.Internal.Text]>_R))
                                       (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                            (GHC.Types.:
                               @ Data.Text.Internal.Builder.Builder
                               (case ww3 of wild {
                                  GHC.Base.Nothing
                                  -> Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties2
                                       `cast`
                                     (Trans
                                          (forall s.
                                           <Data.Text.Internal.Builder.Buffer s
                                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                           ->_R Sym (GHC.ST.NTCo:ST[0]
                                                         <s>_N <[Data.Text.Internal.Text]>_R))
                                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                                  GHC.Base.Just x
                                  -> (Arhelk.Armenian.Lemma.Data.Common.$fTextShowGrammarQuantity2
                                        x)
                                       `cast`
                                     (Trans
                                          (forall s.
                                           <Data.Text.Internal.Builder.Buffer s
                                            -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                           ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                           ->_R Sym (GHC.ST.NTCo:ST[0]
                                                         <s>_N <[Data.Text.Internal.Text]>_R))
                                          (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                               (GHC.Types.:
                                  @ Data.Text.Internal.Builder.Builder
                                  (case ww4 of wild {
                                     GHC.Base.Nothing
                                     -> Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties1
                                          `cast`
                                        (Trans
                                             (forall s.
                                              <Data.Text.Internal.Builder.Buffer s
                                               -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                              ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                              ->_R Sym (GHC.ST.NTCo:ST[0]
                                                            <s>_N <[Data.Text.Internal.Text]>_R))
                                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])))
                                     GHC.Base.Just x
                                     -> (Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase2
                                           x)
                                          `cast`
                                        (Trans
                                             (forall s.
                                              <Data.Text.Internal.Builder.Buffer s
                                               -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                                              ->_R <Data.Text.Internal.Builder.Buffer s>_R
                                              ->_R Sym (GHC.ST.NTCo:ST[0]
                                                            <s>_N <[Data.Text.Internal.Text]>_R))
                                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))) })
                                  (GHC.Types.[] @ Data.Text.Internal.Builder.Builder))))))) -}
ba88335028c7b70b17ce669253dfd20e
  $w$cshowsPrec ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.FirstDeclension
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension3
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.SecondDeclension
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension2
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.ThirdDeclension
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension1
                        w1 }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $w$cshowsPrec1 ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Arhelk.Armenian.Lemma.Data.Substantive.Nominativus
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase6
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.Genitivus
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase5
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.Dativus
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase4
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.Accusativus
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase3
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.Ablativus
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase2
                        w1
                   Arhelk.Armenian.Lemma.Data.Substantive.Praepositionalis
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase1
                        w1 }) -}
d52bcc9f7d5fe2ba550d0e454ba93e81
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> GHC.Show.ShowS
  {- Arity: 6, Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                   ww2 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                   ww3 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.Declension
                   ww4 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                   ww5 :: GHC.Base.Maybe
                            Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties10
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties10
                       ww2
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties10
                       ww3
                 } in
                 let {
                   f3 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                       Arhelk.Armenian.Lemma.Data.Common.$fShowGrammarQuantity
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties10
                       ww4
                 } in
                 let {
                   f4 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties10
                       ww5
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties9
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties8
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties7
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties6
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties7
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties5
                                            (f2
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties7
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties4
                                                     (f3
                                                        (GHC.Base.++
                                                           @ GHC.Types.Char
                                                           Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties7
                                                           (GHC.Base.++
                                                              @ GHC.Types.Char
                                                              Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties3
                                                              (f4
                                                                 (GHC.Base.++
                                                                    @ GHC.Types.Char
                                                                    Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties2
                                                                    x)))))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ x :: GHC.Base.String ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x)) }) -}
7ad1962ebbded5db51490283f728cec8
  $w$ctoEnum ::
    GHC.Prim.Int# -> Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1) of wild1 {
                        GHC.Types.False
                        -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                             ww } }) -}
5a1289615014fb06f0949558fffcecc0
  $w$ctoEnum1 ::
    GHC.Prim.Int#
    -> Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1) of wild1 {
                        GHC.Types.False
                        -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                             ww } }) -}
ba88335028c7b70b17ce669253dfd20e
  $w$ctoEnum2 ::
    GHC.Prim.Int# -> Arhelk.Armenian.Lemma.Data.Substantive.Declension
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 2) of wild1 {
                        GHC.Types.False
                        -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                             ww } }) -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $w$ctoEnum3 ::
    GHC.Prim.Int# -> Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase7 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 5) of wild1 {
                        GHC.Types.False
                        -> Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase7 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                             ww } }) -}
7ad1962ebbded5db51490283f728cec8
  $wa ::
    Arhelk.Armenian.Lemma.Data.Substantive.Animacy
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> GHC.Prim.MutableByteArray# s
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 7,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
5a1289615014fb06f0949558fffcecc0
  $wa1 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> GHC.Prim.MutableByteArray# s
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 7,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
ba88335028c7b70b17ce669253dfd20e
  $wa2 ::
    Arhelk.Armenian.Lemma.Data.Substantive.Declension
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> GHC.Prim.MutableByteArray# s
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 7,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
0336ee1a4810fb1e33e1e3de3f46ee66
  $wa3 ::
    Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> GHC.Prim.MutableByteArray# s
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.State# s
       -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 7,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
0cf94ef86868ce2a5dae692061b8613a
  $wa4 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa23 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa23
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa23 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
1e6d3677c1f9ee04edeb5aa510506441
  $wa5 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa23 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa23
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa23 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
af33e6ad0df67d9a2580ce240066a130
  $wa6 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa23 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa23
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa23 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
9a8f4bf4ad64622a6430ffccc7c9867d
  $wa7 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa23 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa23
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa23 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
fa067836004f302ee581fd2d6c0a1c9c
  $wa8 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> GHC.Prim.MutableByteArray# s
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   w :: Data.Text.Internal.Builder.Buffer s
                        -> GHC.ST.ST s [Data.Text.Internal.Text]
                   ww :: GHC.Prim.MutableByteArray# s
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   w1 :: GHC.Prim.State# s[OneShot] ->
                 letrec {
                   $wa23 :: GHC.Prim.MutableByteArray# s
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> [GHC.Types.Char]
                            -> GHC.Prim.State# s
                            -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                     {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                        Inline: [0] -}
                   = \ ww4 :: GHC.Prim.MutableByteArray# s
                       ww5 :: GHC.Prim.Int#
                       ww6 :: GHC.Prim.Int#
                       ww7 :: GHC.Prim.Int#
                       w2 :: [GHC.Types.Char]
                       w3 :: GHC.Prim.State# s[OneShot] ->
                     case w2 of wild1 {
                       []
                       -> (w (Data.Text.Internal.Builder.Buffer @ s ww4 ww5 ww6 ww7))
                            `cast`
                          (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                            w3
                       : ipv4 ipv5
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww7 1) of wild2 {
                            GHC.Types.False
                            -> case ipv4 of wild3 { GHC.Types.C# c# ->
                               let {
                                 x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x 65536) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      i# :: GHC.Prim.Int# = GHC.Prim.+# ww5 ww6
                                    } in
                                    let {
                                      x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                    } in
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           i#
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.uncheckedIShiftRA# x# 10)
                                                    55296)))
                                           w3 of s2# { DEFAULT ->
                                    case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# i# 1)
                                           (GHC.Prim.narrow16Word#
                                              (GHC.Prim.int2Word#
                                                 (GHC.Prim.+# (GHC.Prim.andI# x# 1023) 56320)))
                                           s2# of s2#1 { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 2)
                                      (GHC.Prim.-# ww7 2)
                                      ipv5
                                      s2#1 } }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord16Array#
                                           @ s
                                           ww4
                                           (GHC.Prim.+# ww5 ww6)
                                           (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# x))
                                           w3 of s2# { DEFAULT ->
                                    $wa23
                                      ww4
                                      ww5
                                      (GHC.Prim.+# ww6 1)
                                      (GHC.Prim.-# ww7 1)
                                      ipv5
                                      s2# } } }
                            GHC.Types.True
                            -> case GHC.Prim.newByteArray#
                                      @ s
                                      224
                                      w3 of ds3 { (#,#) ipv8 ipv9 ->
                               (# ipv8,
                                  GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    (Data.Text.Internal.Text
                                       ww4
                                         `cast`
                                       (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                              s) GHC.Prim.ByteArray#)
                                       ww5
                                       ww6)
                                    (case $wa23
                                            ipv9
                                            0
                                            0
                                            112
                                            wild1
                                            ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                     ipv11 }) #) } } }
                 } in
                 $wa23 ww ww1 ww2 ww3 (GHC.Types.[] @ GHC.Types.Char) w1) -}
da3683f0ac596fb0c84206cac5ad7a63
  $wgo ::
    [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
    -> (# GHC.Base.Maybe
            Arhelk.Armenian.Lemma.Data.Substantive.Appellativity,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension,
          GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity,
          GHC.Base.Maybe
            Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
7ad1962ebbded5db51490283f728cec8
  data Animacy = AnimateNoun | InanimateNoun
    Promotable
5a1289615014fb06f0949558fffcecc0
  data Appellativity = AppellativeNoun | ProperNoun
    Promotable
ba88335028c7b70b17ce669253dfd20e
  data Declension
    = FirstDeclension | SecondDeclension | ThirdDeclension
    Promotable
0336ee1a4810fb1e33e1e3de3f46ee66
  data GrammarCase
    = Nominativus
    | Genitivus
    | Dativus
    | Accusativus
    | Ablativus
    | Praepositionalis
    Promotable
da3683f0ac596fb0c84206cac5ad7a63
  data SubstantiveProperties
    = SubstantiveProperties {_substAppellativity :: GHC.Base.Maybe
                                                      Arhelk.Armenian.Lemma.Data.Substantive.Appellativity,
                             _substAnimacy :: GHC.Base.Maybe
                                                Arhelk.Armenian.Lemma.Data.Substantive.Animacy,
                             _substDeclension :: GHC.Base.Maybe
                                                   Arhelk.Armenian.Lemma.Data.Substantive.Declension,
                             _substQuantity :: GHC.Base.Maybe
                                                 Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity,
                             _substCase :: GHC.Base.Maybe
                                             Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase}
    Promotable
7b440cbc62f136cf1482959e7391928a
  _substAnimacy ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  RecSel Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
c01f6dd53507852391fecaf25e64b5e7
  _substAppellativity ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  RecSel Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
1a4750d175a1b88ea708f0bb37af9c12
  _substCase ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Base.Maybe
         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  RecSel Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
85579cccfe773f5202e15f5f814061d3
  _substDeclension ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension
  RecSel Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
970fdcfef8db73bd381a3632ee7676f2
  _substQuantity ::
    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
  RecSel Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 case ds of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
d3fb90e2ea1c7a526f298eb624c61873
  substAnimacy ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Substantive.Animacy))
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,1*U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                   a18 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Animacy)
                   @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Substantive.Animacy ->
                    case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                      ds
                      x
                      ds2
                      ds3
                      ds4 })
                   (f1
                      (case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                       ds1 }))) -}
c73caf67895228144a7a45ac18fb149b
  substAppellativity ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe
       Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Substantive.Appellativity))
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(1*U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                   a18 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Substantive.Appellativity)
                   @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Substantive.Appellativity ->
                    case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                      x
                      ds1
                      ds2
                      ds3
                      ds4 })
                   (f1
                      (case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                       ds }))) -}
49d6852c990fb66627a6e671291d5120
  substCase ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase))
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U,U,1*U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                   a18 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase)
                   @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase ->
                    case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                      ds
                      ds1
                      ds2
                      ds3
                      x })
                   (f1
                      (case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                       ds4 }))) -}
7b2c5d4e6c2f69a7aeefd571dac92cf9
  substDeclension ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Substantive.Declension
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Substantive.Declension))
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,1*U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Substantive.Declension
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                   a18 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Substantive.Declension)
                   @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Substantive.Declension ->
                    case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                      ds
                      ds1
                      x
                      ds3
                      ds4 })
                   (f1
                      (case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                       ds2 }))) -}
50f41efc0261ffd2c2ac0ff8ed05fd51
  substQuantity ::
    GHC.Base.Functor f =>
    (GHC.Base.Maybe Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
     -> f (GHC.Base.Maybe
             Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity))
    -> Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
    -> f Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U,1*U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   $dFunctor :: GHC.Base.Functor f
                   f1 :: GHC.Base.Maybe
                           Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity
                         -> f (GHC.Base.Maybe
                                 Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity)
                   a18 :: Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe
                        Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity)
                   @ Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                   (\ x :: GHC.Base.Maybe
                             Arhelk.Armenian.Lemma.Data.Common.GrammarQuantity ->
                    case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                    Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties
                      ds
                      ds1
                      ds2
                      x
                      ds4 })
                   (f1
                      (case a18 of wild { Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties ds ds1 ds2 ds3 ds4 ->
                       ds3 }))) -}
instance GHC.Enum.Bounded [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fBoundedAnimacy
instance GHC.Enum.Bounded [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fBoundedAppellativity
instance GHC.Enum.Bounded [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fBoundedDeclension
instance GHC.Enum.Bounded [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fBoundedGrammarCase
instance GHC.Enum.Enum [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAnimacy
instance GHC.Enum.Enum [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEnumAppellativity
instance GHC.Enum.Enum [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEnumDeclension
instance GHC.Enum.Enum [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEnumGrammarCase
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEqAnimacy
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEqAppellativity
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEqDeclension
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEqGrammarCase
instance GHC.Classes.Eq [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fEqSubstantiveProperties
instance GHC.Base.Monoid [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fMonoidSubstantiveProperties
instance GHC.Classes.Ord [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAnimacy
instance GHC.Classes.Ord [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fOrdAppellativity
instance GHC.Classes.Ord [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fOrdDeclension
instance GHC.Classes.Ord [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fOrdGrammarCase
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fShowAnimacy
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fShowAppellativity
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fShowDeclension
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fShowGrammarCase
instance GHC.Show.Show [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fShowSubstantiveProperties
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Substantive.Animacy]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Substantive.Appellativity]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Substantive.Declension]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase
instance TextShow.Classes.TextShow [Arhelk.Armenian.Lemma.Data.Substantive.SubstantiveProperties]
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowSubstantiveProperties
"SPEC/Arhelk.Armenian.Lemma.Data.Substantive $dmshowbPrec @ Animacy" [ALWAYS] forall $dTextShow :: TextShow.Classes.TextShow
                                                                                                     Arhelk.Armenian.Lemma.Data.Substantive.Animacy
  TextShow.Classes.$dmshowbPrec @ Arhelk.Armenian.Lemma.Data.Substantive.Animacy
                                $dTextShow
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAnimacy_$s$dmshowbPrec
"SPEC/Arhelk.Armenian.Lemma.Data.Substantive $dmshowbPrec @ Appellativity" [ALWAYS] forall $dTextShow :: TextShow.Classes.TextShow
                                                                                                           Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
  TextShow.Classes.$dmshowbPrec @ Arhelk.Armenian.Lemma.Data.Substantive.Appellativity
                                $dTextShow
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowAppellativity_$s$dmshowbPrec
"SPEC/Arhelk.Armenian.Lemma.Data.Substantive $dmshowbPrec @ Declension" [ALWAYS] forall $dTextShow :: TextShow.Classes.TextShow
                                                                                                        Arhelk.Armenian.Lemma.Data.Substantive.Declension
  TextShow.Classes.$dmshowbPrec @ Arhelk.Armenian.Lemma.Data.Substantive.Declension
                                $dTextShow
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowDeclension_$s$dmshowbPrec
"SPEC/Arhelk.Armenian.Lemma.Data.Substantive $dmshowbPrec @ GrammarCase" [ALWAYS] forall $dTextShow :: TextShow.Classes.TextShow
                                                                                                         Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
  TextShow.Classes.$dmshowbPrec @ Arhelk.Armenian.Lemma.Data.Substantive.GrammarCase
                                $dTextShow
  = Arhelk.Armenian.Lemma.Data.Substantive.$fTextShowGrammarCase_$s$dmshowbPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

